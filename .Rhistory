library(ncdf4)
library(fields)
library(ncdf4.helpers)
#Open cru data - with code help from kevin
cru_data_all <- ncdf4::nc_open
cru_data_all <- ncdf4::nc_open("Documents/cru_ts4.02.1901.2017.tmp.dat.nc")
#Getting longitude for north america
cru_long <- ncvar_get(cru_data_all, 'lon', start = 400, count = 111)
cru_data_all <- ncdf4::nc_open("Documents/cru_ts4.02.1901.2017.tmp.dat.nc")
library(ncdf4)
library(fields)
library(ncdf4)
library(ncdf4.helpers)
#Open cru data - with code help from kevin
cru_data_all <- ncdf4::nc_open
cru_data_all <- ncdf4::nc_open("Documents/cru_ts4.02.1901.2017.tmp.dat.nc")
View(cru_data_all)
rm(cru_data_all())
rm(function(cru_data_all()))
library(ncdf4)
library(fields)
library(ncdf4.helpers)
cru_data_all <- ncdf4::nc_open("Documents/cru_ts4.02.1901.2017.tmp.dat.nc")
library(neotoma)
library(analogue)
library(rioja)
library(vegan)
library(maps)
# Gets historic datasets
deepfal_dataset <- get_dataset(19620) #Deep-Falmouth Pond Dataset ID
# Stores data associated with each Deep-Falmouth Pond dataset
deepfal_data <- get_download(deepfal_dataset)
# Assigns the first dataset, which is pollen, to deepfal_pollen
deepfal_pollen <- deepfal_data[[1]]
# Downloads modern pollen and climate data
library(raster)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
sites.temps <- sites.temperatures[,601:1380] #1951Jan-2015Dec
#30 year means for January temps
tjan51.80 <- sites.temps[,c(1,13,25,37,49,61,73,85,97,109,121,133,145,157,
169,181,193,205,217,229,241,253,265,277,289,
301,313,325,337,349)]
tjan51.80$Jan51.80mean <- rowMeans(tjan51.80[,1:30]) #adds means column
tjan86.15 <- sites.temps[,c(421,433,445,457,469,481,
493,505,517,529,541,553,565,577,589,601,613,625,
637,649,661,673,685,697,709,721,733,745,757,
769)]
tjan86.15$Jan86.15mean <- rowMeans(tjan86.15[,1:30]) #adds mean column
#30 year means for July temps
tjul51.80 <- sites.temps[,c(7,19,31,43,55,67,79,91,103,115,127,139,151,163,175,
187,199,211,223,235,247,259,271,283,295,307,319,
331,343,355)]
tjul51.80$Jul51.80mean <- rowMeans(tjul51.80[,1:30]) #adds mean column
tjul86.15 <- sites.temps[,c(427,439,451,463,475,487,499,511,523,535,
547,559,571,583,595,607,619,631,643,655,
667,679,691,703,715,727,739,751,763,775)]
tjul86.15$Jul86.15mean <- rowMeans(tjul86.15[,1:30]) #adds mean column
#Create temp avg for all 65 years
tavg <- rowMeans(sites.temps[,1:780])
#Create temp avg for 1951-1980 and 1986-2015
tavg51.80 <- rowMeans(sites.temps[,1:360])
tavg.86.15 <- rowMeans(sites.temps[,421:780])
#Creates data frame with necessary info
#If get an error might have to load sites csv in before all.temp.data
all.temp.data <- data.frame(tjan51.80$Jan51.80mean,
tjan86.15$Jan86.15mean, tjul51.80$Jul51.80mean,
tjul86.15$Jul86.15mean, tavg, tavg51.80, tavg.86.15) #sites[,0:2]
# Assigns climate variables to vectors
tempavg51.80 <- all.temp.data$tavg51.80
tempavg86.15 <- all.temp.data$tavg.86.15
#Read surface sample data in
surfacesamples <- read.csv("Documents/actual modern pollen data.csv")[,1:4]
#Download dataset info i.e. taxa counts whatever
ss.downloaded <- neotoma::get_download(surfacesamples[,1])
library(neotoma)
library(analogue)
library(rioja)
library(neotoma)
library(analogue)
library(rioja)
library(vegan)
library(maps)
# Gets historic datasets
deepfal_dataset <- get_dataset(19620) #Deep-Falmouth Pond Dataset ID
# Stores data associated with each Deep-Falmouth Pond dataset
deepfal_data <- get_download(deepfal_dataset)
# Assigns the first dataset, which is pollen, to deepfal_pollen
deepfal_pollen <- deepfal_data[[1]]
# Downloads modern pollen and climate data
library(raster)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
sites.temperatures <- read.csv("PSS Sites Temp Data.csv", header = TRUE, row.names = 1, sep = ",", check.names = FALSE)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("Desktop/PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("Desktop\PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("Documents/PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
#read sites temp data.csv back into R
sites.temperatures <- read.csv(file = "Documents/PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
#read sites temp data.csv back into R
sites.temperatures <- read.csv(file = "PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
#read sites temp data.csv back into R
as.data.frame(sites.temperatures)
#read sites temp data.csv back into R
sites.temperatures <- as.data.frame(sites.temperatures)
#read sites temp data.csv back into R
sites.temperatures <- read.csv(file = "PSS Sites Temp Data.csv")
#read sites temp data.csv back into R
sites.temperatures <- read.csv("Documents/PSS Sites Temp Data.csv")
library(neotoma)
library(analogue)
library(rioja)
library(vegan)
library(maps)
# Gets historic datasets
deepfal_dataset <- get_dataset(19620) #Deep-Falmouth Pond Dataset ID
# Stores data associated with each Deep-Falmouth Pond dataset
deepfal_data <- get_download(deepfal_dataset)
# Assigns the first dataset, which is pollen, to deepfal_pollen
deepfal_pollen <- deepfal_data[[1]]
# Downloads modern pollen and climate data
library(raster)
#read sites temp data.csv back into R
sites.temperatures <- read.csv("Documents/PSS Sites Temp Data.csv")
#read sites temp data.csv back into R
sites.temperatures <- read.csv("PSS Sites Temp Data.csv")
#read sites temp data.csv back into R
sites.temperatures <- read.csv("PSS Sites Temp Data.csv")
#read sites temp data.csv back into R
sites.temperatures <- read.csv(file = "PSS Sites Temp Data.csv", header=TRUE, row.names=1, sep=",", check.names=FALSE) # Mean monthly temperature)
sites.temps <- sites.temperatures[,601:1380] #1951Jan-2015Dec
#30 year means for January temps
tjan51.80 <- sites.temps[,c(1,13,25,37,49,61,73,85,97,109,121,133,145,157,
169,181,193,205,217,229,241,253,265,277,289,
301,313,325,337,349)]
tjan51.80$Jan51.80mean <- rowMeans(tjan51.80[,1:30]) #adds means column
tjan86.15 <- sites.temps[,c(421,433,445,457,469,481,
493,505,517,529,541,553,565,577,589,601,613,625,
637,649,661,673,685,697,709,721,733,745,757,
769)]
tjan86.15$Jan86.15mean <- rowMeans(tjan86.15[,1:30]) #adds mean column
#30 year means for July temps
tjul51.80 <- sites.temps[,c(7,19,31,43,55,67,79,91,103,115,127,139,151,163,175,
187,199,211,223,235,247,259,271,283,295,307,319,
331,343,355)]
tjul51.80$Jul51.80mean <- rowMeans(tjul51.80[,1:30]) #adds mean column
tjul86.15 <- sites.temps[,c(427,439,451,463,475,487,499,511,523,535,
547,559,571,583,595,607,619,631,643,655,
667,679,691,703,715,727,739,751,763,775)]
tjul86.15$Jul86.15mean <- rowMeans(tjul86.15[,1:30]) #adds mean column
#Create temp avg for all 65 years
tavg <- rowMeans(sites.temps[,1:780])
#Create temp avg for 1951-1980 and 1986-2015
tavg51.80 <- rowMeans(sites.temps[,1:360])
tavg.86.15 <- rowMeans(sites.temps[,421:780])
#Creates data frame with necessary info
#If get an error might have to load sites csv in before all.temp.data
all.temp.data <- data.frame(tjan51.80$Jan51.80mean,
tjan86.15$Jan86.15mean, tjul51.80$Jul51.80mean,
tjul86.15$Jul86.15mean, tavg, tavg51.80, tavg.86.15) #sites[,0:2]
# Assigns climate variables to vectors
tempavg51.80 <- all.temp.data$tavg51.80
tempavg86.15 <- all.temp.data$tavg.86.15
#Read surface sample data in
surfacesamples <- read.csv("Documents/actual modern pollen data.csv")[,1:4]
#Read surface sample data in
surfacesamples <- read.csv("Documents/actual modern pollen data.csv")[,1:4]
#Read surface sample data in
surfacesamples <- read.csv("actual modern pollen data.csv")[,1:4]
#Download dataset info i.e. taxa counts whatever
ss.downloaded <- neotoma::get_download(surfacesamples[,1])
clean.surfacesamples <- compile_taxa(ss.downloaded, list.name = "WS64")
#create matrix for modern pollen data to pull from later
mod.pollen <- matrix(ncol = 65, #65 columns is all taxa from ws64 + 'other'
nrow = length(clean.surfacesamples), #makes it length 1971
data = 0) #makes everything 0 so can put data in later
mod.clim <- matrix(ncol = 5, #climate matrix
nrow = length(clean.surfacesamples),
data = 0)
mod.pollen <- as.data.frame(mod.pollen)
mod.clim <- as.data.frame(mod.clim)
View(mod.pollen)
colnames(mod.clim) <- c("site.name", "lat", "long", "51.80", "86.15") #what we want row names of mod clim to be
View(mod.clim)
alt.table <- read.csv("Downloads/poll_temps/alt_table.csv", stringsAsFactors = FALSE)
alt.table <- read.csv("Downloads/poll_temps/alt_table.csv", stringsAsFactors = FALSE)
alt.table <- read.csv("alt_table.csv", stringsAsFactors = FALSE)
colnames(mod.pollen) <- sort(c(unique(alt.table$WS64, "Other"))) #[-10] #[-10] gets rid of misspelled asteraceae
View(mod.clim)
View(mod.pollen)
#make a loop to basically import data into the empty matrices
i=1
View(clean.surfacesamples)
clean.surfacesamples$`1`$counts
clean.surfacesamples$`4`$counts
for(i in 1:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples[[i]]$counts), mod.pollen[1,], all.x = TRUE)
# mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
View(val)
View(surfacesamples)
View(ss.downloaded)
clean.surfacesamples$`42864`$counts
p=4
for(p in 4:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples[[i]]$counts), mod.pollen[1,], all.x = TRUE)
# mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
View(val)
rm(p)
for(i in 1:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples[[i]]$counts), mod.pollen[1,], all.x = TRUE)
mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
View(mod.clim)
View(mod.pollen)
warnings()
#create matrix for modern pollen data to pull from later
mod.pollen <- matrix(ncol = 64, #65 columns is all taxa from ws64 + 'other'
nrow = length(clean.surfacesamples), #makes it length 1971
data = 0) #makes everything 0 so can put data in later
mod.clim <- matrix(ncol = 5, #climate matrix
nrow = length(clean.surfacesamples),
data = 0)
mod.pollen <- as.data.frame(mod.pollen)
mod.clim <- as.data.frame(mod.clim)
colnames(mod.clim) <- c("site.name", "lat", "long", "51.80", "86.15") #what we want row names of mod clim to be
alt.table <- read.csv("alt_table.csv", stringsAsFactors = FALSE)
colnames(mod.pollen) <- sort(c(unique(alt.table$WS64, "Other"))) #[-10] #[-10] gets rid of misspelled asteraceae
#make a loop to basically import data into the empty matrices
i=1
#val <- holds spot for data to go
#assign val to mod pollen
#when want to add new temp data, add it above in matrix, then add another
#row of data below
for(i in 1:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples[[i]]$counts), mod.pollen[1,], all.x = TRUE)
mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
warnings()
#create matrix for modern pollen data to pull from later
mod.pollen <- matrix(ncol = 65, #65 columns is all taxa from ws64 + 'other'
nrow = length(clean.surfacesamples), #makes it length 1971
data = 0) #makes everything 0 so can put data in later
mod.clim <- matrix(ncol = 5, #climate matrix
nrow = length(clean.surfacesamples),
data = 0)
mod.pollen <- as.data.frame(mod.pollen)
mod.clim <- as.data.frame(mod.clim)
colnames(mod.clim) <- c("site.name", "lat", "long", "51.80", "86.15") #what we want row names of mod clim to be
alt.table <- read.csv("alt_table.csv", stringsAsFactors = FALSE)
colnames(mod.pollen) <- sort(c(unique(alt.table$WS64, "Other"))) #[-10] #[-10] gets rid of misspelled asteraceae
#make a loop to basically import data into the empty matrices
i=1
for(i in 1:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples$`1014`$counts), mod.pollen[1,], all.x = TRUE)
mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
for(i in 1:length(clean.surfacesamples)){
val <- merge(as.data.frame(clean.surfacesamples$`1014`$counts), mod.pollen[1,], all.x = TRUE)
#mod.pollen[i,] <- val
# mod.clim[i,1] <- clean.surfacesamples[[i]]$dataset$site.data$site.name
# mod.clim[i,2] <- clean.surfacesamples[[i]]$dataset$site.data$lat
# mod.clim[i,3] <- clean.surfacesamples[[i]]$dataset$site.data$long
# mod.clim[i,4] <- tempavg51.80[i]
# mod.clim[i,5] <- tempavg86.15[i]
}
View(mod.pollen)
0.9772-0.0228
data = c(11.53, 8.35, 11.66, 11.54, 9.83, 5.92, 7.14, 8.41, 8.99, 13.81, 10.53, 7.4, 6.7, 8.42, 8.4, 8.18, 9.5, 7.22, 9.87, 6.52, 8.55, 9.75, 9.27, 10.61, 8.89, 10.01, 11.17, 7.62, 6.43, 9.09, 8.53, 7.91, 8.13, 7.7, 10.45, 11.3, 10.98, 8.14, 11.48, 8.44, 12.52, 10.12, 8.09, 7.34)
qqnorm(data)
